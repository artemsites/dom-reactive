{"version":3,"file":"index.mjs","sources":["node_modules/mitt/dist/mitt.mjs","index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ninterface State {\n  value: any;\n}\n\ndeclare global {\n  interface Window {\n    [key: string]: any;\n  }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(scopeId: string, scopeApp: () => void) {\n  const wrapper = document.getElementById(scopeId);\n\n  if (wrapper) {\n    const appInstance = scopeApp();\n\n    handlerClassesReactive(wrapper, appInstance);\n\n    window[scopeId] = appInstance;\n  } else {\n    throw Error(\"Нет wrapper: #\" + scopeId);\n  }\n}\n\nexport function ref(defaultValue: any): State {\n  const stateNameHash = `state_${crypto.randomUUID()}`;\n  let state: State = { value: defaultValue };\n\n  const proxyState = new Proxy<State>(state, {\n    set(stateTarget, prop, valueNew) {\n      if (prop === \"value\") {\n        // {value: false}\n        stateTarget[\"value\"] = valueNew;\n        emitter.emit(stateNameHash, stateTarget);\n        return true;\n      }\n      return false;\n    },\n  });\n\n  stateNamesHashes.set(proxyState, stateNameHash);\n\n  emitter.emit(stateNameHash, proxyState);\n\n  return proxyState;\n}\n\nfunction handlerClassesReactive(wrapper: HTMLElement, appInstance: any) {\n  const $classes = wrapper.querySelectorAll(\n    \"[data-class]\"\n  ) as NodeListOf<HTMLElement>;\n\n  $classes.forEach(($el) => {\n    if ($el.dataset.class) {\n      let jsonString = $el.dataset.class;\n\n      $el.removeAttribute(\"data-class\");\n\n      const parsedJson = JSON.parse(jsonString);\n      if (Array.isArray(parsedJson)) {\n        for (let i in parsedJson) {\n          let jsExpressionTernary = parsedJson[i];\n\n          const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n          const match = jsExpressionTernary.match(regex);\n\n          let jsNameWithPrefix = match[1];\n          const classNameTrue = match[2];\n          const classNameFalse = match[3];\n          const className = [classNameTrue, classNameFalse];\n\n          handlerClassesReactiveSubFunc($el, className, jsNameWithPrefix);\n        }\n      } else if (isObject(parsedJson)) {\n        for (let className in parsedJson) {\n          let jsNameWithPrefix = parsedJson[className];\n\n          handlerClassesReactiveSubFunc($el, className, jsNameWithPrefix);\n        }\n      }\n    }\n  });\n\n  function handlerClassesReactiveSubFunc(\n    $el: HTMLElement,\n    className: string | string[],\n    jsNameWithPrefix: string\n  ) {\n    let isRevertVal = false;\n    if (jsNameWithPrefix[0] === \"!\") {\n      isRevertVal = true;\n      jsNameWithPrefix = jsNameWithPrefix.slice(1);\n    }\n\n    let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n    const isNotEqualExpression = jsExpression.includes(\"!=\");\n    const isEqualExpression = jsExpression.includes(\"==\");\n    if (isNotEqualExpression || isEqualExpression) {\n      if (isNotEqualExpression) {\n        const regex = /!=/;\n        const operator = \"!=\";\n        splitExpressionAndCompareAndUpdateClassesReactive(\n          jsExpression,\n          regex,\n          operator,\n          className,\n          isRevertVal,\n          $el\n        );\n      } else if (isEqualExpression) {\n        const regex = /==/;\n        const operator = \"==\";\n        splitExpressionAndCompareAndUpdateClassesReactive(\n          jsExpression,\n          regex,\n          operator,\n          className,\n          isRevertVal,\n          $el\n        );\n      }\n    } else {\n      const operator = \"==\";\n      const jsName = jsExpression;\n      const jsVal = true;\n      compareAndUpdateClassesReactive(\n        jsName,\n        jsVal,\n        operator,\n        isRevertVal,\n        className,\n        $el\n      );\n    }\n  }\n\n  function splitExpressionAndCompareAndUpdateClassesReactive(\n    jsExpression: any,\n    regex: any,\n    operator: any,\n    className: any,\n    isRevertVal: any,\n    $el: any\n  ) {\n    const res = splitExpression(jsExpression, regex);\n    if (res && res.length === 2) {\n      const [jsName, jsVal] = res;\n      compareAndUpdateClassesReactive(\n        jsName,\n        jsVal,\n        operator,\n        isRevertVal,\n        className,\n        $el\n      );\n    }\n  }\n\n  function compareAndUpdateClassesReactive(\n    jsName: any,\n    jsVal: any,\n    operator: any,\n    isRevertVal: any,\n    className: any,\n    $el: any\n  ) {\n    const state = appInstance[jsName];\n\n    const isTrue = compare(state.value, jsVal, operator);\n\n    toggleClass(isTrue, className, $el, isRevertVal);\n    const stateNameHash = stateNamesHashes.get(state);\n\n    emitter.on(stateNameHash, (newState: any) => {\n      const isTrue = compare(newState.value, jsVal, operator);\n      toggleClass(isTrue, className, $el, isRevertVal);\n    });\n  }\n\n  function toggleClass(\n    value: any,\n    className: string | string[],\n    where: HTMLElement,\n    isRevertVal = false\n  ) {\n    try {\n      if (value && !isRevertVal) {\n        if (Array.isArray(className)) {\n          where.classList.remove(className[1]);\n          where.classList.add(className[0]);\n        } else {\n          where.classList.add(className);\n        }\n      } else {\n        if (Array.isArray(className)) {\n          where.classList.remove(className[0]);\n          where.classList.add(className[1]);\n        } else {\n          where.classList.remove(className);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n// @note tools:\nfunction isObject(value: any) {\n  return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n  return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n  expression: string,\n  regex: RegExp\n): [string, string] | null {\n  const parts = expression.split(regex);\n\n  if (parts.length === 2) {\n    return [parts[0].trim(), parts[1].trim()];\n  }\n\n  return null;\n}\n\nfunction compare(value1: any, value2: any, operator: string) {\n  switch (operator) {\n    case \"!==\":\n      return value1 !== value2;\n    case \"!=\":\n      return value1 != value2;\n    case \"===\":\n      return value1 === value2;\n    case \"==\":\n      return value1 == value2;\n    case \"<\":\n      return value1 < value2;\n    case \">\":\n      return value1 > value2;\n    case \"<=\":\n      return value1 <= value2;\n    case \">=\":\n      return value1 >= value2;\n    default:\n      throw new Error(\"Invalid operator\");\n  }\n}\n"],"names":["mitt","n","t","e","i","emitter","stateNamesHashes","createScope","scopeId","scopeApp","wrapper","appInstance","handlerClassesReactive","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","$el","jsonString","parsedJson","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesReactiveSubFunc","isObject","className","isRevertVal","jsExpression","deleteWordPrefix","isNotEqualExpression","isEqualExpression","splitExpressionAndCompareAndUpdateClassesReactive","compareAndUpdateClassesReactive","operator","res","splitExpression","jsName","jsVal","isTrue","compare","toggleClass","newState","value","where","error","strWithprefixWithDot","expression","parts","value1","value2"],"mappings":"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","x_google_ignoreList":[0]}