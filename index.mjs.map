{"version":3,"file":"index.mjs","sources":["node_modules/mitt/dist/mitt.mjs","index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ninterface State {\n  value: any;\n}\n\ndeclare global {\n  interface Window {\n    [key: string]: any;\n  }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(scopeId: string, scopeApp: () => void) {\n  const wrapper = document.getElementById(scopeId);\n\n  if (wrapper) {\n    const appInstance = scopeApp();\n\n    handlerClasses(wrapper, appInstance);\n\n    window[scopeId] = appInstance;\n  } else {\n    throw Error(\"Нет wrapper: #\" + scopeId);\n  }\n}\n\nexport function ref(defaultValue: any): State {\n  const stateNameHash = `state_${crypto.randomUUID()}`;\n  let state: State = { value: defaultValue };\n\n  const proxyState = new Proxy<State>(state, {\n    set(stateTarget, prop, valueNew) {\n      if (prop === \"value\") {\n        // {value: false}\n        stateTarget[\"value\"] = valueNew;\n        emitter.emit(stateNameHash, stateTarget);\n        return true;\n      }\n      return false;\n    },\n  });\n\n  stateNamesHashes.set(proxyState, stateNameHash);\n\n  emitter.emit(stateNameHash, proxyState);\n\n  return proxyState;\n}\n\nfunction handlerClasses(wrapper: HTMLElement, appInstance: any) {\n  const $classes = wrapper.querySelectorAll(\n    \"[data-class]\"\n  ) as NodeListOf<HTMLElement>;\n\n  $classes.forEach(($el) => {\n    if ($el.dataset.class) {\n      let jsonString = $el.dataset.class;\n\n      $el.removeAttribute(\"data-class\");\n\n      const parsedJson = JSON.parse(jsonString);\n      if (Array.isArray(parsedJson)) {\n        for (let i in parsedJson) {\n          let jsExpressionTernary = parsedJson[i];\n\n          const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n          const match = jsExpressionTernary.match(regex);\n\n          let jsNameWithPrefix = match[1];\n          const classNameTrue = match[2];\n          const classNameFalse = match[3];\n          const className = [classNameTrue, classNameFalse];\n\n          handlerClassesInner($el, className, jsNameWithPrefix);\n        }\n      } else if (isObject(parsedJson)) {\n        for (let className in parsedJson) {\n          let jsNameWithPrefix = parsedJson[className];\n\n          handlerClassesInner($el, className, jsNameWithPrefix);\n        }\n      }\n    }\n  });\n\n  function handlerClassesInner(\n    $el: HTMLElement,\n    className: string | string[],\n    jsNameWithPrefix: string\n  ) {\n    let isRevertVal = false;\n    if (jsNameWithPrefix[0] === \"!\") {\n      isRevertVal = true;\n      jsNameWithPrefix = jsNameWithPrefix.slice(1);\n    }\n\n    let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n    if (jsExpression.includes(\"==\")) {\n      let res = splitExpression(jsExpression, /==/);\n      if (res && res.length === 2) {\n        const [jsName, jsVal] = res;\n\n        let state = appInstance[jsName];\n        let isTrue = state.value == jsVal;\n        toggleClass(isTrue, className, $el, isRevertVal);\n        let stateNameHash = stateNamesHashes.get(state);\n\n        emitter.on(stateNameHash, (newState: any) => {\n          if (newState) {\n            let isTrue = newState.value == jsVal;\n            toggleClass(isTrue, className, $el, isRevertVal);\n          }\n        });\n      }\n    } else if (jsExpression.includes(\"!=\")) {\n      let res = splitExpression(jsExpression, /!=/);\n      if (res && res.length === 2) {\n        const [jsName, jsVal] = res;\n\n        let state = appInstance[jsName];\n        let isTrue = state.value != jsVal;\n        toggleClass(isTrue, className, $el, isRevertVal);\n        let stateNameHash = stateNamesHashes.get(state);\n\n        emitter.on(stateNameHash, (newState: any) => {\n          let isTrue = newState.value != jsVal;\n          toggleClass(isTrue, className, $el, isRevertVal);\n        });\n      }\n    } else {\n      let state = appInstance[jsExpression];\n\n      toggleClass(state.value, className, $el, isRevertVal);\n      let stateNameHash = stateNamesHashes.get(state);\n\n      emitter.on(stateNameHash, (newState: any) => {\n        toggleClass(newState.value, className, $el, isRevertVal);\n      });\n    }\n  }\n}\n\nfunction toggleClass(\n  value: any,\n  className: string | string[],\n  where: HTMLElement,\n  isRevertVal = false\n) {\n  try {\n    if (value && !isRevertVal) {\n      if (Array.isArray(className)) {\n        where.classList.remove(className[1]);\n        where.classList.add(className[0]);\n      } else {\n        where.classList.add(className);\n      }\n    } else {\n      if (Array.isArray(className)) {\n        where.classList.remove(className[0]);\n        where.classList.add(className[1]);\n      } else {\n        where.classList.remove(className);\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction isObject(value: any) {\n  return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n  return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n  expression: string,\n  regex: RegExp\n): [string, string] | null {\n  const parts = expression.split(regex);\n\n  if (parts.length === 2) {\n    return [parts[0].trim(), parts[1].trim()];\n  }\n\n  return null;\n}\n"],"names":["mitt","n","e","i","emitter","stateNamesHashes","createScope","scopeId","scopeApp","wrapper","appInstance","handlerClasses","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","$el","jsonString","parsedJson","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesInner","isObject","className","isRevertVal","jsExpression","deleteWordPrefix","res","splitExpression","jsName","jsVal","isTrue","toggleClass","newState","value","where","error","strWithprefixWithDot","expression","parts"],"mappings":"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","x_google_ignoreList":[0]}