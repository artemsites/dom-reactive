{"version":3,"file":"index.mjs","sources":["node_modules/mitt/dist/mitt.mjs","index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ninterface State {\n    value: any;\n}\n\ndeclare global {\n    interface Window {\n        [key: string]: any;\n    }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(scopeId: string, scopeApp: () => void) {\n    const wrapper = document.getElementById(scopeId);\n\n    if (wrapper) {\n        const appInstance = scopeApp();\n\n        handlerClassesReactive(wrapper, appInstance);\n\n        window[scopeId] = appInstance;\n    } else {\n        throw Error(\"Нет wrapper: #\" + scopeId);\n    }\n}\n\nexport function ref(defaultValue: any): State {\n    const stateNameHash = `state_${crypto.randomUUID()}`;\n    let state: State = { value: defaultValue };\n\n    const proxyState = new Proxy<State>(state, {\n        set(stateTarget, prop, valueNew) {\n            if (prop === \"value\") {\n                if (stateTarget[\"value\"] !== valueNew) {\n                    stateTarget[\"value\"] = valueNew;\n                    emitter.emit(stateNameHash, stateTarget);\n                }\n                return true;\n            }\n            return false;\n        },\n    });\n\n    stateNamesHashes.set(proxyState, stateNameHash);\n\n    emitter.emit(stateNameHash, proxyState);\n\n    return proxyState;\n}\n\nfunction handlerClassesReactive($wrapper: HTMLElement, appInstance: any) {\n    if ($wrapper.dataset.class) {\n        handlerClassesReactiveSubFunc1($wrapper);\n    }\n\n    const $elementsWithDataClasses = $wrapper.querySelectorAll(\n        \"[data-class]\",\n    ) as NodeListOf<HTMLElement>;\n    $elementsWithDataClasses.forEach(($el) => {\n        handlerClassesReactiveSubFunc1($el);\n    });\n\n    function handlerClassesReactiveSubFunc1($el) {\n        let jsonString = $el.dataset.class;\n\n        $el.removeAttribute(\"data-class\");\n\n        let parsedJson;\n        try {\n            parsedJson = JSON.parse(jsonString);\n        } catch (error) {\n            console.error(\"Error at JSON string: \" + jsonString);\n            console.error(error);\n        }\n\n        if (Array.isArray(parsedJson)) {\n            for (let i in parsedJson) {\n                let jsExpressionTernary = parsedJson[i];\n\n                const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n                const match = jsExpressionTernary.match(regex);\n\n                let jsNameWithPrefix = match[1];\n                const classNameTrue = match[2];\n                const classNameFalse = match[3];\n                const className = [classNameTrue, classNameFalse];\n\n                handlerClassesReactiveSubFunc2(\n                    $el,\n                    className,\n                    jsNameWithPrefix,\n                );\n            }\n        } else if (isObject(parsedJson)) {\n            for (let className in parsedJson) {\n                let jsNameWithPrefix = parsedJson[className];\n\n                handlerClassesReactiveSubFunc2(\n                    $el,\n                    className,\n                    jsNameWithPrefix,\n                );\n            }\n        }\n    }\n\n    function handlerClassesReactiveSubFunc2(\n        $el: HTMLElement,\n        className: string | string[],\n        jsNameWithPrefix: string,\n    ) {\n        let isRevertVal = false;\n        if (jsNameWithPrefix[0] === \"!\") {\n            isRevertVal = true;\n            jsNameWithPrefix = jsNameWithPrefix.slice(1);\n        }\n\n        let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n        const isNotEqualExpression = jsExpression.includes(\"!=\");\n        const isEqualExpression = jsExpression.includes(\"==\");\n        if (isNotEqualExpression || isEqualExpression) {\n            if (isNotEqualExpression) {\n                const regex = /!=/;\n                const operator = \"!=\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el,\n                );\n            } else if (isEqualExpression) {\n                const regex = /==/;\n                const operator = \"==\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el,\n                );\n            }\n        } else {\n            const operator = \"==\";\n            const jsName = jsExpression;\n            const jsVal = true;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el,\n            );\n        }\n    }\n\n    function splitExpressionAndCompareAndUpdateClassesReactive(\n        jsExpression: any,\n        regex: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any,\n    ) {\n        const res = splitExpression(jsExpression, regex);\n        if (res && res.length === 2) {\n            const [jsName, jsVal] = res;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el,\n            );\n        }\n    }\n\n    function compareAndUpdateClassesReactive(\n        jsName: any,\n        jsVal: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any,\n    ) {\n        const state = appInstance[jsName];\n        const isTrue = compare(state.value, jsVal, operator);\n\n        toggleClass(isTrue, className, $el, isRevertVal);\n        const stateNameHash = stateNamesHashes.get(state);\n\n        emitter.on(stateNameHash, (newState: any) => {\n            const isTrue = compare(newState.value, jsVal, operator);\n            toggleClass(isTrue, className, $el, isRevertVal);\n        });\n    }\n\n    function toggleClass(\n        value: any,\n        className: string | string[],\n        where: HTMLElement,\n        isRevertVal = false,\n    ) {\n        try {\n            const isTrue = (value && !isRevertVal) || (!value && isRevertVal);\n            if (typeof className === \"string\") {\n                if (isTrue) {\n                    where.classList.add(className);\n                } else {\n                    where.classList.remove(className);\n                }\n            } else if (Array.isArray(className)) {\n                const [classIfTrue, classIfFalse] = className;\n                if (isTrue) {\n                    where.classList.remove(classIfFalse);\n                    where.classList.add(classIfTrue);\n                } else {\n                    where.classList.remove(classIfTrue);\n                    where.classList.add(classIfFalse);\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\n// @note tools:\nfunction isObject(value: any) {\n    return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n    return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n    expression: string,\n    regex: RegExp,\n): [string, string] | null {\n    const parts = expression.split(regex);\n\n    if (parts.length === 2) {\n        return [parts[0].trim(), parts[1].trim()];\n    }\n\n    return null;\n}\n\nfunction compare(value1: any, value2: any, operator: string) {\n    switch (operator) {\n        case \"!=\":\n            return value1 != value2;\n        case \"==\":\n            return value1 == value2;\n        case \"<\":\n            return value1 < value2;\n        case \">\":\n            return value1 > value2;\n        case \"<=\":\n            return value1 <= value2;\n        case \">=\":\n            return value1 >= value2;\n        default:\n            throw new Error(\"Invalid operator\");\n    }\n}\n"],"names":["mitt","n","t","e","i","emitter","stateNamesHashes","createScope","scopeId","scopeApp","wrapper","appInstance","handlerClassesReactive","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","$wrapper","handlerClassesReactiveSubFunc1","$el","jsonString","parsedJson","error","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesReactiveSubFunc2","isObject","className","isRevertVal","jsExpression","deleteWordPrefix","isNotEqualExpression","isEqualExpression","splitExpressionAndCompareAndUpdateClassesReactive","compareAndUpdateClassesReactive","operator","res","splitExpression","jsName","jsVal","isTrue","compare","toggleClass","newState","value","where","classIfTrue","classIfFalse","strWithprefixWithDot","expression","parts","value1","value2"],"mappings":"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","x_google_ignoreList":[0]}