{"version":3,"file":"index.mjs","sources":["../node_modules/mitt/dist/mitt.mjs","../index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ntype Wrapper = any;\n\ninterface ComponentInstance {\n    [key: string]: any;\n}\n\ninterface State {\n    value: any;\n}\n\ndeclare global {\n    interface Window {\n        [key: string]: any;\n    }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(\n    scopeId: string,\n    scope: () => ComponentInstance,\n    alias: string = \"\"\n) {\n    const $wrapper = document.getElementById(scopeId);\n\n    if ($wrapper) {\n        const scopeInstance = scope();\n\n        // @note handle data-click\n        handlerClickReactive($wrapper, scopeInstance);\n\n        // @note handle data-class\n        handlerClassesReactive($wrapper, scopeInstance);\n\n        // @note handle input[data-value]\n        handlerInputDataValueReactive($wrapper, scopeInstance);\n\n        // @note handle data-change\n        handlerChangeReactive($wrapper, scopeInstance);\n\n        // @note handle data-input\n        handlerInputReactive($wrapper, scopeInstance);\n\n        if (alias !== \"\") {\n            window[alias] = scopeInstance;\n        } else {\n            window[scopeId] = scopeInstance;\n        }\n    } else {\n        throw Error(\"Нет wrapper: #\" + scopeId);\n    }\n}\n\nexport function createComponent(wrapperClass: string, component: () => {}) {\n    const wrappers = document.getElementsByClassName(\n        wrapperClass\n    ) as HTMLCollection;\n    for (let $wrapper of wrappers) {\n        if ($wrapper) {\n            const componentInstance: ComponentInstance = component();\n            if (isObject(componentInstance)) {\n                // @note handle data-ref\n                handlerRefsInDom($wrapper as Wrapper, componentInstance);\n\n                // @note handle data-click\n                handlerClickReactive($wrapper as Wrapper, componentInstance);\n\n                // @note handle data-class\n                handlerClassesReactive($wrapper as Wrapper, componentInstance);\n\n                // @note handle input[data-value]\n                // ! @todo not tested!!!\n                handlerInputDataValueReactive(\n                    $wrapper as Wrapper,\n                    componentInstance\n                );\n\n                // @note handle data-change\n                handlerChangeReactive($wrapper as Wrapper, componentInstance);\n\n                // @note handle data-input\n                handlerInputReactive($wrapper, componentInstance);\n            }\n        } else {\n            throw Error(\"Нет wrapper: .\" + wrapperClass);\n        }\n    }\n}\n\nexport function ref(defaultValue: any): State {\n    const stateNameHash = `state_${crypto.randomUUID()}`;\n    let state: State = { value: defaultValue };\n\n    const proxyState = new Proxy<State>(state, {\n        set(stateTarget, prop, valueNew) {\n            if (prop === \"value\") {\n                if (stateTarget[\"value\"] !== valueNew) {\n                    stateTarget[\"value\"] = valueNew;\n                    emitter.emit(stateNameHash, stateTarget);\n                }\n                return true;\n            }\n            return false;\n        },\n    });\n\n    stateNamesHashes.set(proxyState, stateNameHash);\n\n    emitter.emit(stateNameHash, proxyState);\n\n    return proxyState;\n}\n\nfunction handlerRefsInDom($wrapper: Wrapper, instance: ComponentInstance) {\n    const refsInDomAll = findAllByAttr(\"data-ref\", $wrapper);\n\n    refsInDomAll.forEach(($refEl) => {\n        const refName = $refEl.getAttribute(\"data-ref\");\n        if (refName) {\n            instance[refName].value = $refEl;\n        } else {\n            console.warn(\"The data-ref name was not found in: \", $refEl);\n        }\n    });\n}\n\nfunction handlerInputDataValueReactive(\n    $wrapper: Wrapper,\n    instance: ComponentInstance\n) {\n    const dataValues = findAllByAttr(\"data-value\", $wrapper);\n\n    dataValues.forEach(($dataValue) => {\n        if ($dataValue instanceof HTMLInputElement) {\n            const dataValue: string | null = $dataValue.getAttribute('data-value') || null;\n\n            if (dataValue) {\n                const jsExpressionWithPrefix: string = dataValue;\n                let jsExpression = deleteWordPrefix(jsExpressionWithPrefix);\n                const state = instance[jsExpression];\n\n                $dataValue.value = state.value;\n                const stateNameHash = stateNamesHashes.get(state);\n                emitter.on(stateNameHash, (newState: any) => {\n                    $dataValue.value = newState.value;\n                });\n            }\n        }\n    });\n}\n\nfunction handlerClickReactive($wrapper: Wrapper, instance: ComponentInstance) {\n    const elClicks = findAllByAttr(\"data-click\", $wrapper);\n\n    if (elClicks.length) {\n        elClicks.forEach(($elOnClick) => {\n            let methodNameOnClick = $elOnClick.getAttribute('data-click');\n\n            if (methodNameOnClick) {\n                // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n                const methodNameOnClickWithoutPrefix =\n                    deleteWordPrefix(methodNameOnClick);\n\n                const methodOnClick = instance[methodNameOnClickWithoutPrefix];\n                $elOnClick.addEventListener(\"click\", function (e) {\n                    methodOnClick(e);\n                });\n            } else {\n                console.warn(\n                    \"The name of the data-click method was not found in: \",\n                    $elOnClick\n                );\n            }\n        });\n    }\n}\n\nfunction handlerChangeReactive($wrapper: Wrapper, instance: ComponentInstance) {\n    const elChanges = findAllByAttr(\"data-change\", $wrapper);\n\n    if (elChanges.length) {\n        elChanges.forEach(($elOnchange) => {\n            if ($elOnchange) {\n                let methodNameOnChange = $elOnchange.getAttribute('data-change');\n                if (methodNameOnChange) {\n                    // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n                    const methodNameOnChangeWithoutPrefix =\n                        deleteWordPrefix(methodNameOnChange);\n                    const methodOnChange =\n                        instance[methodNameOnChangeWithoutPrefix];\n                    if (methodOnChange) {\n                        $elOnchange.addEventListener(\"change\", function (e) {\n                            methodOnChange(e);\n                        });\n                    }\n                }\n            } else {\n                console.warn(\n                    \"The name of the data-click method was not found in: \",\n                    $elOnchange\n                );\n            }\n        });\n    }\n}\n\nfunction handlerInputReactive($wrapper: Wrapper, instance: ComponentInstance) {\n    const elInputs = findAllByAttr(\"data-input\", $wrapper);\n    if (elInputs.length) {\n        elInputs.forEach(($elOnInput) => {\n            if ($elOnInput) {\n                let methodNameOnInput = $elOnInput.getAttribute('data-input');\n                if (methodNameOnInput) {\n                    // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n                    const methodNameOnInputWithoutPrefix =\n                        deleteWordPrefix(methodNameOnInput);\n                    const methodOnInput =\n                        instance[methodNameOnInputWithoutPrefix];\n                    if (methodOnInput) {\n                        $elOnInput.addEventListener(\"input\", function (e) {\n                            methodOnInput(e);\n                        });\n                    }\n                }\n            } else {\n                console.warn(\n                    \"The name of the data-click method was not found in: \",\n                    $elOnInput\n                );\n            }\n        });\n    }\n}\n\nfunction handlerClassesReactive(\n    $wrapper: Wrapper,\n    instance: ComponentInstance\n) {\n    const elClasses = findAllByAttr(\"data-class\", $wrapper);\n\n    elClasses.forEach(($el) => {\n        handlerClassesReactiveSubFunc1($el);\n    });\n\n    function handlerClassesReactiveSubFunc1($el: HTMLElement) {\n        let jsonString = $el.getAttribute('data-class');\n        if (jsonString) {\n            $el.removeAttribute(\"data-class\");\n\n            let parsedJson;\n            try {\n                parsedJson = JSON.parse(jsonString);\n            } catch (error) {\n                console.error(\"Error at JSON string: \" + jsonString);\n                console.error(error);\n            }\n\n            if (Array.isArray(parsedJson)) {\n                for (let i in parsedJson) {\n                    let jsExpressionTernary = parsedJson[i];\n\n                    const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n                    const match = jsExpressionTernary.match(regex);\n\n                    let jsNameWithPrefix = match[1];\n                    const classNameTrue = match[2];\n                    const classNameFalse = match[3];\n                    const className = [classNameTrue, classNameFalse];\n\n                    handlerClassesReactiveSubFunc2(\n                        $el,\n                        className,\n                        jsNameWithPrefix\n                    );\n                }\n            } else if (isObject(parsedJson)) {\n                for (let className in parsedJson) {\n                    let jsNameWithPrefix = parsedJson[className];\n\n                    handlerClassesReactiveSubFunc2(\n                        $el,\n                        className,\n                        jsNameWithPrefix\n                    );\n                }\n            }\n        } else {\n            console.warn(\"The data-class JSON string was not found in: \", $el);\n        }\n    }\n\n    function handlerClassesReactiveSubFunc2(\n        $el: HTMLElement,\n        className: string | string[],\n        jsNameWithPrefix: string\n    ) {\n        let isRevertVal = false;\n        if (jsNameWithPrefix[0] === \"!\") {\n            isRevertVal = true;\n            jsNameWithPrefix = jsNameWithPrefix.slice(1);\n        }\n\n        let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n        const isNotEqualExpression = jsExpression.includes(\"!=\");\n        const isEqualExpression = jsExpression.includes(\"==\");\n        if (isNotEqualExpression || isEqualExpression) {\n            if (isNotEqualExpression) {\n                const regex = /!=/;\n                const operator = \"!=\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el\n                );\n            } else if (isEqualExpression) {\n                const regex = /==/;\n                const operator = \"==\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el\n                );\n            }\n        } else {\n            const operator = \"==\";\n            const jsName = jsExpression;\n            const jsVal = true;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el\n            );\n        }\n    }\n\n    function splitExpressionAndCompareAndUpdateClassesReactive(\n        jsExpression: any,\n        regex: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any\n    ) {\n        const res = splitExpression(jsExpression, regex);\n        if (res && res.length === 2) {\n            const [jsName, jsVal] = res;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el\n            );\n        }\n    }\n\n    function compareAndUpdateClassesReactive(\n        jsName: any,\n        jsVal: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any\n    ) {\n        const state = instance[jsName];\n        if (!state) {\n            showWarnIfRefNotFound($wrapper, jsName);\n        } else {\n            const isTrue = compare(state.value, jsVal, operator);\n\n            toggleClass(isTrue, className, $el, isRevertVal);\n            const stateNameHash = stateNamesHashes.get(state);\n\n            emitter.on(stateNameHash, (newState: any) => {\n                const isTrue = compare(newState.value, jsVal, operator);\n                toggleClass(isTrue, className, $el, isRevertVal);\n            });\n        }\n    }\n\n    function toggleClass(\n        value: any,\n        className: string | string[],\n        where: HTMLElement,\n        isRevertVal = false\n    ) {\n        try {\n            const isTrue = (value && !isRevertVal) || (!value && isRevertVal);\n            if (typeof className === \"string\") {\n                if (isTrue) {\n                    where.classList.add(className);\n                } else {\n                    where.classList.remove(className);\n                }\n            } else if (Array.isArray(className)) {\n                const [classIfTrue, classIfFalse] = className;\n                if (isTrue) {\n                    where.classList.remove(classIfFalse);\n                    where.classList.add(classIfTrue);\n                } else {\n                    where.classList.remove(classIfTrue);\n                    where.classList.add(classIfFalse);\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nfunction showWarnIfRefNotFound($wrapper: Wrapper, jsName: string) {\n    const instanceId =\n        \"#\" + $wrapper.getAttribute(\"id\") ||\n        \".\" + $wrapper.getAttribute(\"class\");\n    console.warn(\n        `Ref ${jsName} is not exists at ${instanceId}. Perhaps the component is located in another component.`\n    );\n}\n\n// ! tools:\nfunction isObject(value: any) {\n    return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n    return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n    expression: string,\n    regex: RegExp\n): [string, string] | null {\n    const parts = expression.split(regex);\n\n    if (parts.length === 2) {\n        return [parts[0].trim(), parts[1].trim()];\n    }\n\n    return null;\n}\n\nfunction compare(value1: any, value2: any, operator: string) {\n    switch (operator) {\n        case \"!=\":\n            return value1 != value2;\n        case \"==\":\n            return value1 == value2;\n        case \"<\":\n            return value1 < value2;\n        case \">\":\n            return value1 > value2;\n        case \"<=\":\n            return value1 <= value2;\n        case \">=\":\n            return value1 >= value2;\n        default:\n            throw new Error(\"Invalid operator\");\n    }\n}\n\nfunction findAllByAttr(attr: string, $wrapper: HTMLElement) {\n    const els = $wrapper.querySelectorAll(`[${attr}]`) as NodeListOf<\n        HTMLElement | HTMLInputElement\n    >;\n\n    const elsAll = [...Array.from(els)];\n\n    if ($wrapper.dataset && $wrapper.getAttribute(attr)) {\n        elsAll.push($wrapper);\n    }\n\n    return elsAll;\n}\n"],"names":["mitt","n","t","e","i","emitter","stateNamesHashes","createScope","scopeId","scope","alias","$wrapper","scopeInstance","handlerClickReactive","handlerClassesReactive","handlerInputDataValueReactive","handlerChangeReactive","handlerInputReactive","createComponent","wrapperClass","component","wrappers","componentInstance","isObject","handlerRefsInDom","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","instance","findAllByAttr","$refEl","refName","$dataValue","dataValue","jsExpression","deleteWordPrefix","newState","elClicks","$elOnClick","methodNameOnClick","methodNameOnClickWithoutPrefix","methodOnClick","elChanges","$elOnchange","methodNameOnChange","methodNameOnChangeWithoutPrefix","methodOnChange","elInputs","$elOnInput","methodNameOnInput","methodNameOnInputWithoutPrefix","methodOnInput","$el","handlerClassesReactiveSubFunc1","jsonString","parsedJson","error","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesReactiveSubFunc2","className","isRevertVal","isNotEqualExpression","isEqualExpression","splitExpressionAndCompareAndUpdateClassesReactive","compareAndUpdateClassesReactive","operator","res","splitExpression","jsName","jsVal","showWarnIfRefNotFound","isTrue","compare","toggleClass","value","where","classIfTrue","classIfFalse","instanceId","strWithprefixWithDot","expression","parts","value1","value2","attr","els","elsAll"],"mappings":"AAAe,SAAAA,EAASC,GAAE;AAAC,SAAM,EAAC,KAAIA,IAAEA,KAAG,oBAAI,OAAI,IAAG,SAASC,GAAEC,GAAE;AAAC,QAAIC,IAAEH,EAAE,IAAIC,CAAC;AAAE,IAAAE,IAAEA,EAAE,KAAKD,CAAC,IAAEF,EAAE,IAAIC,GAAE,CAACC,CAAC,CAAC;AAAA,EAAC,GAAE,KAAI,SAASD,GAAEC,GAAE;AAAC,QAAIC,IAAEH,EAAE,IAAIC,CAAC;AAAE,IAAAE,MAAID,IAAEC,EAAE,OAAOA,EAAE,QAAQD,CAAC,MAAI,GAAE,CAAC,IAAEF,EAAE,IAAIC,GAAE,EAAE;AAAA,EAAE,GAAE,MAAK,SAASA,GAAEC,GAAE;AAAC,QAAIC,IAAEH,EAAE,IAAIC,CAAC;AAAE,IAAAE,KAAGA,EAAE,QAAQ,IAAI,SAASH,GAAE;AAAC,MAAAA,EAAEE,CAAC;AAAA,IAAC,CAAC,IAAGC,IAAEH,EAAE,IAAI,GAAG,MAAIG,EAAE,MAAO,EAAC,IAAI,SAASH,GAAE;AAAC,MAAAA,EAAEC,GAAEC,CAAC;AAAA,IAAC,CAAC;AAAA,EAAC,EAAC;AAAC;AC2BzT,MAAME,IAAUL,EAAK;AAErB,IAAIM,wBAAuB,IAAI;AAExB,SAASC,EACZC,GACAC,GACAC,IAAgB,IAClB;AACQ,QAAAC,IAAW,SAAS,eAAeH,CAAO;AAEhD,MAAIG,GAAU;AACV,UAAMC,IAAgBH,EAAM;AAG5B,IAAAI,EAAqBF,GAAUC,CAAa,GAG5CE,EAAuBH,GAAUC,CAAa,GAG9CG,EAA8BJ,GAAUC,CAAa,GAGrDI,EAAsBL,GAAUC,CAAa,GAG7CK,EAAqBN,GAAUC,CAAa,GAExCF,MAAU,KACV,OAAOA,CAAK,IAAIE,IAEhB,OAAOJ,CAAO,IAAII;AAAA,EACtB;AAEM,UAAA,MAAM,mBAAmBJ,CAAO;AAE9C;AAEgB,SAAAU,EAAgBC,GAAsBC,GAAqB;AACvE,QAAMC,IAAW,SAAS;AAAA,IACtBF;AAAA,EACJ;AACA,WAASR,KAAYU;AACjB,QAAIV,GAAU;AACV,YAAMW,IAAuCF,EAAU;AACnD,MAAAG,EAASD,CAAiB,MAE1BE,EAAiBb,GAAqBW,CAAiB,GAGvDT,EAAqBF,GAAqBW,CAAiB,GAG3DR,EAAuBH,GAAqBW,CAAiB,GAI7DP;AAAA,QACIJ;AAAA,QACAW;AAAA,MACJ,GAGAN,EAAsBL,GAAqBW,CAAiB,GAG5DL,EAAqBN,GAAUW,CAAiB;AAAA,IACpD;AAEM,YAAA,MAAM,mBAAmBH,CAAY;AAGvD;AAEO,SAASM,EAAIC,GAA0B;AAC1C,QAAMC,IAAgB,SAAS,OAAO,WAAY,CAAA;AAC9C,MAAAC,IAAe,EAAE,OAAOF,EAAa;AAEnC,QAAAG,IAAa,IAAI,MAAaD,GAAO;AAAA,IACvC,IAAIE,GAAaC,GAAMC,GAAU;AAC7B,aAAID,MAAS,WACLD,EAAY,UAAaE,MACzBF,EAAY,QAAWE,GACf3B,EAAA,KAAKsB,GAAeG,CAAW,IAEpC,MAEJ;AAAA,IAAA;AAAA,EACX,CACH;AAEgB,SAAAxB,EAAA,IAAIuB,GAAYF,CAAa,GAEtCtB,EAAA,KAAKsB,GAAeE,CAAU,GAE/BA;AACX;AAEA,SAASL,EAAiBb,GAAmBsB,GAA6B;AAGzD,EAFQC,EAAc,YAAYvB,CAAQ,EAE1C,QAAQ,CAACwB,MAAW;AACvB,UAAAC,IAAUD,EAAO,aAAa,UAAU;AAC9C,IAAIC,IACSH,EAAAG,CAAO,EAAE,QAAQD,IAElB,QAAA,KAAK,wCAAwCA,CAAM;AAAA,EAC/D,CACH;AACL;AAEA,SAASpB,EACLJ,GACAsB,GACF;AAGa,EAFQC,EAAc,cAAcvB,CAAQ,EAE5C,QAAQ,CAAC0B,MAAe;AAC/B,QAAIA,aAAsB,kBAAkB;AACxC,YAAMC,IAA2BD,EAAW,aAAa,YAAY,KAAK;AAE1E,UAAIC,GAAW;AAEP,YAAAC,IAAeC,EADoBF,CACmB;AACpD,cAAAV,IAAQK,EAASM,CAAY;AAEnC,QAAAF,EAAW,QAAQT,EAAM;AACnB,cAAAD,IAAgBrB,EAAiB,IAAIsB,CAAK;AACxC,QAAAvB,EAAA,GAAGsB,GAAe,CAACc,MAAkB;AACzC,UAAAJ,EAAW,QAAQI,EAAS;AAAA,QAAA,CAC/B;AAAA,MAAA;AAAA,IACL;AAAA,EACJ,CACH;AACL;AAEA,SAAS5B,EAAqBF,GAAmBsB,GAA6B;AACpE,QAAAS,IAAWR,EAAc,cAAcvB,CAAQ;AAErD,EAAI+B,EAAS,UACAA,EAAA,QAAQ,CAACC,MAAe;AACzB,QAAAC,IAAoBD,EAAW,aAAa,YAAY;AAE5D,QAAIC,GAAmB;AAEb,YAAAC,IACFL,EAAiBI,CAAiB,GAEhCE,IAAgBb,EAASY,CAA8B;AAClD,MAAAF,EAAA,iBAAiB,SAAS,SAAUxC,GAAG;AAC9C,QAAA2C,EAAc3C,CAAC;AAAA,MAAA,CAClB;AAAA,IAAA;AAEO,cAAA;AAAA,QACJ;AAAA,QACAwC;AAAA,MACJ;AAAA,EACJ,CACH;AAET;AAEA,SAAS3B,EAAsBL,GAAmBsB,GAA6B;AACrE,QAAAc,IAAYb,EAAc,eAAevB,CAAQ;AAEvD,EAAIoC,EAAU,UACAA,EAAA,QAAQ,CAACC,MAAgB;AAC/B,QAAIA,GAAa;AACT,UAAAC,IAAqBD,EAAY,aAAa,aAAa;AAC/D,UAAIC,GAAoB;AAEd,cAAAC,IACFV,EAAiBS,CAAkB,GACjCE,IACFlB,EAASiB,CAA+B;AAC5C,QAAIC,KACYH,EAAA,iBAAiB,UAAU,SAAU7C,GAAG;AAChD,UAAAgD,EAAehD,CAAC;AAAA,QAAA,CACnB;AAAA,MACL;AAAA,IACJ;AAEQ,cAAA;AAAA,QACJ;AAAA,QACA6C;AAAA,MACJ;AAAA,EACJ,CACH;AAET;AAEA,SAAS/B,EAAqBN,GAAmBsB,GAA6B;AACpE,QAAAmB,IAAWlB,EAAc,cAAcvB,CAAQ;AACrD,EAAIyC,EAAS,UACAA,EAAA,QAAQ,CAACC,MAAe;AAC7B,QAAIA,GAAY;AACR,UAAAC,IAAoBD,EAAW,aAAa,YAAY;AAC5D,UAAIC,GAAmB;AAEb,cAAAC,IACFf,EAAiBc,CAAiB,GAChCE,IACFvB,EAASsB,CAA8B;AAC3C,QAAIC,KACWH,EAAA,iBAAiB,SAAS,SAAUlD,GAAG;AAC9C,UAAAqD,EAAcrD,CAAC;AAAA,QAAA,CAClB;AAAA,MACL;AAAA,IACJ;AAEQ,cAAA;AAAA,QACJ;AAAA,QACAkD;AAAA,MACJ;AAAA,EACJ,CACH;AAET;AAEA,SAASvC,EACLH,GACAsB,GACF;AAGY,EAFQC,EAAc,cAAcvB,CAAQ,EAE5C,QAAQ,CAAC8C,MAAQ;AACvB,IAAAC,EAA+BD,CAAG;AAAA,EAAA,CACrC;AAED,WAASC,EAA+BD,GAAkB;AAClD,QAAAE,IAAaF,EAAI,aAAa,YAAY;AAC9C,QAAIE,GAAY;AACZ,MAAAF,EAAI,gBAAgB,YAAY;AAE5B,UAAAG;AACA,UAAA;AACa,QAAAA,IAAA,KAAK,MAAMD,CAAU;AAAA,eAC7BE,GAAO;AACJ,gBAAA,MAAM,2BAA2BF,CAAU,GACnD,QAAQ,MAAME,CAAK;AAAA,MAAA;AAGnB,UAAA,MAAM,QAAQD,CAAU;AACxB,iBAASxD,KAAKwD,GAAY;AAClB,cAAAE,IAAsBF,EAAWxD,CAAC;AAEtC,gBAAM2D,IAAQ,iCACRC,IAAQF,EAAoB,MAAMC,CAAK;AAEzC,cAAAE,IAAmBD,EAAM,CAAC;AACxB,gBAAAE,IAAgBF,EAAM,CAAC,GACvBG,IAAiBH,EAAM,CAAC;AAG9B,UAAAI;AAAA,YACIX;AAAA,YAHc,CAACS,GAAeC,CAAc;AAAA,YAK5CF;AAAA,UACJ;AAAA,QAAA;AAAA,eAEG1C,EAASqC,CAAU;AAC1B,iBAASS,KAAaT,GAAY;AAC1B,cAAAK,IAAmBL,EAAWS,CAAS;AAE3C,UAAAD;AAAA,YACIX;AAAA,YACAY;AAAA,YACAJ;AAAA,UACJ;AAAA,QAAA;AAAA,IAER;AAEQ,cAAA,KAAK,iDAAiDR,CAAG;AAAA,EACrE;AAGK,WAAAW,EACLX,GACAY,GACAJ,GACF;AACE,QAAIK,IAAc;AACd,IAAAL,EAAiB,CAAC,MAAM,QACVK,IAAA,IACKL,IAAAA,EAAiB,MAAM,CAAC;AAG3C,QAAA1B,IAAeC,EAAiByB,CAAgB;AAE9C,UAAAM,IAAuBhC,EAAa,SAAS,IAAI,GACjDiC,IAAoBjC,EAAa,SAAS,IAAI;AACpD,IAAIgC,KAAwBC,IACpBD,IAGAE;AAAA,MACIlC;AAAA,MAHU;AAAA,MACG;AAAA,MAKb+B;AAAA,MACAD;AAAA,MACAZ;AAAA,IACJ,IACOe,KAGPC;AAAA,MACIlC;AAAA,MAHU;AAAA,MACG;AAAA,MAKb+B;AAAA,MACAD;AAAA,MACAZ;AAAA,IACJ,IAMJiB;AAAA,MAFenC;AAAA,MACD;AAAA,MAFG;AAAA,MAOb+B;AAAA,MACAD;AAAA,MACAZ;AAAA,IACJ;AAAA,EACJ;AAGJ,WAASgB,EACLlC,GACAwB,GACAY,GACAL,GACAD,GACAZ,GACF;AACQ,UAAAmB,IAAMC,EAAgBtC,GAAcwB,CAAK;AAC3C,QAAAa,KAAOA,EAAI,WAAW,GAAG;AACnB,YAAA,CAACE,GAAQC,CAAK,IAAIH;AACxB,MAAAF;AAAA,QACII;AAAA,QACAC;AAAA,QACAJ;AAAA,QACAL;AAAA,QACAD;AAAA,QACAZ;AAAA,MACJ;AAAA,IAAA;AAAA,EACJ;AAGJ,WAASiB,EACLI,GACAC,GACAJ,GACAL,GACAD,GACAZ,GACF;AACQ,UAAA7B,IAAQK,EAAS6C,CAAM;AAC7B,QAAI,CAAClD;AACD,MAAAoD,EAAsBrE,GAAUmE,CAAM;AAAA,SACnC;AACH,YAAMG,IAASC,EAAQtD,EAAM,OAAOmD,GAAOJ,CAAQ;AAEvC,MAAAQ,EAAAF,GAAQZ,GAAWZ,GAAKa,CAAW;AACzC,YAAA3C,IAAgBrB,EAAiB,IAAIsB,CAAK;AAExC,MAAAvB,EAAA,GAAGsB,GAAe,CAACc,MAAkB;AACzC,cAAMwC,IAASC,EAAQzC,EAAS,OAAOsC,GAAOJ,CAAQ;AAC1CM,QAAAA,EAAAA,GAAQZ,GAAWZ,GAAKa,CAAW;AAAA,MAAA,CAClD;AAAA,IAAA;AAAA,EACL;AAGJ,WAASa,EACLC,GACAf,GACAgB,GACAf,IAAc,IAChB;AACM,QAAA;AACA,YAAMW,IAAUG,KAAS,CAACd,KAAiB,CAACc,KAASd;AACjD,UAAA,OAAOD,KAAc;AACrB,QAAIY,IACMI,EAAA,UAAU,IAAIhB,CAAS,IAEvBgB,EAAA,UAAU,OAAOhB,CAAS;AAAA,eAE7B,MAAM,QAAQA,CAAS,GAAG;AAC3B,cAAA,CAACiB,GAAaC,CAAY,IAAIlB;AACpC,QAAIY,KACMI,EAAA,UAAU,OAAOE,CAAY,GAC7BF,EAAA,UAAU,IAAIC,CAAW,MAEzBD,EAAA,UAAU,OAAOC,CAAW,GAC5BD,EAAA,UAAU,IAAIE,CAAY;AAAA,MACpC;AAAA,aAEC1B,GAAO;AACZ,cAAQ,MAAMA,CAAK;AAAA,IAAA;AAAA,EACvB;AAER;AAEA,SAASmB,EAAsBrE,GAAmBmE,GAAgB;AACxD,QAAAU,IACF,MAAM7E,EAAS,aAAa,IAAI,KAChC,MAAMA,EAAS,aAAa,OAAO;AAC/B,UAAA;AAAA,IACJ,OAAOmE,CAAM,qBAAqBU,CAAU;AAAA,EAChD;AACJ;AAGA,SAASjE,EAAS6D,GAAY;AACnB,SAAAA,MAAU,QAAQ,OAAOA,KAAU;AAC9C;AAEA,SAAS5C,EAAiBiD,GAA8B;AAC7C,SAAAA,EAAqB,QAAQ,UAAU,EAAE;AACpD;AAEA,SAASZ,EACLa,GACA3B,GACuB;AACjB,QAAA4B,IAAQD,EAAW,MAAM3B,CAAK;AAEhC,SAAA4B,EAAM,WAAW,IACV,CAACA,EAAM,CAAC,EAAE,QAAQA,EAAM,CAAC,EAAE,MAAM,IAGrC;AACX;AAEA,SAAST,EAAQU,GAAaC,GAAalB,GAAkB;AACzD,UAAQA,GAAU;AAAA,IACd,KAAK;AACD,aAAOiB,KAAUC;AAAA,IACrB,KAAK;AACD,aAAOD,KAAUC;AAAA,IACrB,KAAK;AACD,aAAOD,IAASC;AAAA,IACpB,KAAK;AACD,aAAOD,IAASC;AAAA,IACpB,KAAK;AACD,aAAOD,KAAUC;AAAA,IACrB,KAAK;AACD,aAAOD,KAAUC;AAAA,IACrB;AACU,YAAA,IAAI,MAAM,kBAAkB;AAAA,EAAA;AAE9C;AAEA,SAAS3D,EAAc4D,GAAcnF,GAAuB;AACxD,QAAMoF,IAAMpF,EAAS,iBAAiB,IAAImF,CAAI,GAAG,GAI3CE,IAAS,CAAC,GAAG,MAAM,KAAKD,CAAG,CAAC;AAElC,SAAIpF,EAAS,WAAWA,EAAS,aAAamF,CAAI,KAC9CE,EAAO,KAAKrF,CAAQ,GAGjBqF;AACX;","x_google_ignoreList":[0]}