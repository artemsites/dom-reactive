{"version":3,"file":"index.mjs","sources":["../node_modules/mitt/dist/mitt.mjs","../index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ninterface ComponentInstance {\n    [key: string]: any;\n}\n\ninterface State {\n    value: any;\n}\n\ndeclare global {\n    interface Window {\n        [key: string]: any;\n    }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(\n    scopeId: string,\n    scope: () => ComponentInstance,\n    alias: string = \"\"\n) {\n    const $wrapper = document.getElementById(scopeId);\n\n    if ($wrapper) {\n        const scopeInstance = scope();\n\n        // @note handle data-click\n        handlerClickReactive($wrapper, scopeInstance);\n\n        handlerClassesReactive($wrapper, scopeInstance);\n\n        if (alias !== \"\") {\n            window[alias] = scopeInstance;\n        } else {\n            window[scopeId] = scopeInstance;\n        }\n    } else {\n        throw Error(\"Нет wrapper: #\" + scopeId);\n    }\n}\n\nexport function createComponent(wrapperClass: string, component: () => {}) {\n    const wrappers = document.getElementsByClassName(\n        wrapperClass\n    ) as HTMLCollection;\n    for (let $wrapper of wrappers) {\n        if ($wrapper) {\n            const componentInstance: ComponentInstance = component();\n            if (isObject(componentInstance)) {\n                // @note handle data-ref\n                const refsInDom = $wrapper.querySelectorAll(\n                    `[data-ref]`\n                ) as NodeListOf<HTMLElement>;\n                refsInDom.forEach(($refEl) => {\n                    const refName = $refEl.getAttribute(\"data-ref\");\n                    if (refName) {\n                        componentInstance[refName].value = $refEl;\n                    } else {\n                        console.warn(\"The data-ref name was not found in: \", $refEl);\n                    }\n                });\n\n                // @note handle data-click\n                handlerClickReactive($wrapper as HTMLElement, componentInstance);\n\n                // @note handle data-class\n                handlerClassesReactive($wrapper as HTMLElement, componentInstance);\n            }\n        } else {\n            throw Error(\"Нет wrapper: .\" + wrapperClass);\n        }\n    }\n}\n\nexport function ref(defaultValue: any): State {\n    const stateNameHash = `state_${crypto.randomUUID()}`;\n    let state: State = { value: defaultValue };\n\n    const proxyState = new Proxy<State>(state, {\n        set(stateTarget, prop, valueNew) {\n            if (prop === \"value\") {\n                if (stateTarget[\"value\"] !== valueNew) {\n                    stateTarget[\"value\"] = valueNew;\n                    emitter.emit(stateNameHash, stateTarget);\n                }\n                return true;\n            }\n            return false;\n        },\n    });\n\n    stateNamesHashes.set(proxyState, stateNameHash);\n\n    emitter.emit(stateNameHash, proxyState);\n\n    return proxyState;\n}\n\nfunction handlerClickReactive($wrapper: HTMLElement, instance: ComponentInstance) {\n    const elClicks = $wrapper.querySelectorAll(\n        `[data-click]`\n    ) as NodeListOf<HTMLElement>;\n    elClicks.forEach(($elOnClick) => {\n        $elOnClick.addEventListener(\"click\", function (e) {\n            let methodNameOnClick = $elOnClick.dataset.click;\n            if (methodNameOnClick) {\n                // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n                const methodNameOnClickWithoutPrefix = deleteWordPrefix(methodNameOnClick)\n\n                const methodOnClick = instance[methodNameOnClickWithoutPrefix];\n                methodOnClick();\n            } else {\n                console.warn(\n                    \"The name of the data-click method was not found in: \",\n                    $elOnClick\n                );\n            }\n        });\n    });\n}\n\nfunction handlerClassesReactive($wrapper: HTMLElement, appInstance: ComponentInstance) {\n    if ($wrapper.dataset && $wrapper.dataset.class) {\n        handlerClassesReactiveSubFunc1($wrapper);\n    }\n\n    const $elementsWithDataClasses = $wrapper.querySelectorAll(\n        \"[data-class]\"\n    ) as NodeListOf<HTMLElement>;\n    $elementsWithDataClasses.forEach(($el) => {\n        handlerClassesReactiveSubFunc1($el);\n    });\n\n    function handlerClassesReactiveSubFunc1($el: HTMLElement) {\n        let jsonString = $el.dataset.class;\n        if (jsonString) {\n            $el.removeAttribute(\"data-class\");\n\n            let parsedJson;\n            try {\n                parsedJson = JSON.parse(jsonString);\n            } catch (error) {\n                console.error(\"Error at JSON string: \" + jsonString);\n                console.error(error);\n            }\n\n            if (Array.isArray(parsedJson)) {\n                for (let i in parsedJson) {\n                    let jsExpressionTernary = parsedJson[i];\n\n                    const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n                    const match = jsExpressionTernary.match(regex);\n\n                    let jsNameWithPrefix = match[1];\n                    const classNameTrue = match[2];\n                    const classNameFalse = match[3];\n                    const className = [classNameTrue, classNameFalse];\n\n                    handlerClassesReactiveSubFunc2($el, className, jsNameWithPrefix);\n                }\n            } else if (isObject(parsedJson)) {\n                for (let className in parsedJson) {\n                    let jsNameWithPrefix = parsedJson[className];\n\n                    handlerClassesReactiveSubFunc2($el, className, jsNameWithPrefix);\n                }\n            }\n        } else {\n            console.warn(\"The data-class JSON string was not found in: \", $el);\n        }\n    }\n\n    function handlerClassesReactiveSubFunc2(\n        $el: HTMLElement,\n        className: string | string[],\n        jsNameWithPrefix: string\n    ) {\n        let isRevertVal = false;\n        if (jsNameWithPrefix[0] === \"!\") {\n            isRevertVal = true;\n            jsNameWithPrefix = jsNameWithPrefix.slice(1);\n        }\n\n        let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n        const isNotEqualExpression = jsExpression.includes(\"!=\");\n        const isEqualExpression = jsExpression.includes(\"==\");\n        if (isNotEqualExpression || isEqualExpression) {\n            if (isNotEqualExpression) {\n                const regex = /!=/;\n                const operator = \"!=\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el\n                );\n            } else if (isEqualExpression) {\n                const regex = /==/;\n                const operator = \"==\";\n                splitExpressionAndCompareAndUpdateClassesReactive(\n                    jsExpression,\n                    regex,\n                    operator,\n                    isRevertVal,\n                    className,\n                    $el\n                );\n            }\n        } else {\n            const operator = \"==\";\n            const jsName = jsExpression;\n            const jsVal = true;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el\n            );\n        }\n    }\n\n    function splitExpressionAndCompareAndUpdateClassesReactive(\n        jsExpression: any,\n        regex: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any\n    ) {\n        const res = splitExpression(jsExpression, regex);\n        if (res && res.length === 2) {\n            const [jsName, jsVal] = res;\n            compareAndUpdateClassesReactive(\n                jsName,\n                jsVal,\n                operator,\n                isRevertVal,\n                className,\n                $el\n            );\n        }\n    }\n\n    function compareAndUpdateClassesReactive(\n        jsName: any,\n        jsVal: any,\n        operator: any,\n        isRevertVal: any,\n        className: any,\n        $el: any\n    ) {\n        const state = appInstance[jsName];\n        const isTrue = compare(state.value, jsVal, operator);\n\n        toggleClass(isTrue, className, $el, isRevertVal);\n        const stateNameHash = stateNamesHashes.get(state);\n\n        emitter.on(stateNameHash, (newState: any) => {\n            const isTrue = compare(newState.value, jsVal, operator);\n            toggleClass(isTrue, className, $el, isRevertVal);\n        });\n    }\n\n    function toggleClass(\n        value: any,\n        className: string | string[],\n        where: HTMLElement,\n        isRevertVal = false\n    ) {\n        try {\n            const isTrue = (value && !isRevertVal) || (!value && isRevertVal);\n            if (typeof className === \"string\") {\n                if (isTrue) {\n                    where.classList.add(className);\n                } else {\n                    where.classList.remove(className);\n                }\n            } else if (Array.isArray(className)) {\n                const [classIfTrue, classIfFalse] = className;\n                if (isTrue) {\n                    where.classList.remove(classIfFalse);\n                    where.classList.add(classIfTrue);\n                } else {\n                    where.classList.remove(classIfTrue);\n                    where.classList.add(classIfFalse);\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\n// @note tools:\nfunction isObject(value: any) {\n    return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n    return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n    expression: string,\n    regex: RegExp\n): [string, string] | null {\n    const parts = expression.split(regex);\n\n    if (parts.length === 2) {\n        return [parts[0].trim(), parts[1].trim()];\n    }\n\n    return null;\n}\n\nfunction compare(value1: any, value2: any, operator: string) {\n    switch (operator) {\n        case \"!=\":\n            return value1 != value2;\n        case \"==\":\n            return value1 == value2;\n        case \"<\":\n            return value1 < value2;\n        case \">\":\n            return value1 > value2;\n        case \"<=\":\n            return value1 <= value2;\n        case \">=\":\n            return value1 >= value2;\n        default:\n            throw new Error(\"Invalid operator\");\n    }\n}\n"],"names":["mitt","n","t","e","i","emitter","stateNamesHashes","createScope","scopeId","scope","alias","$wrapper","scopeInstance","handlerClickReactive","handlerClassesReactive","createComponent","wrapperClass","component","wrappers","componentInstance","isObject","$refEl","refName","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","instance","$elOnClick","methodNameOnClick","methodNameOnClickWithoutPrefix","deleteWordPrefix","methodOnClick","appInstance","handlerClassesReactiveSubFunc1","$el","jsonString","parsedJson","error","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesReactiveSubFunc2","className","isRevertVal","jsExpression","isNotEqualExpression","isEqualExpression","splitExpressionAndCompareAndUpdateClassesReactive","compareAndUpdateClassesReactive","operator","res","splitExpression","jsName","jsVal","isTrue","compare","toggleClass","newState","value","where","classIfTrue","classIfFalse","strWithprefixWithDot","expression","parts","value1","value2"],"mappings":"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","x_google_ignoreList":[0]}