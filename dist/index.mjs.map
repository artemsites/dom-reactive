{"version":3,"file":"index.mjs","sources":["../node_modules/mitt/dist/mitt.mjs","../index.ts"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","/**\n * @source https://github.com/artemsites/dom\n * @source https://gitverse.ru/artemsites/dom\n *\n * @api:\n * createScope - creating an object in the DOM for working with the library\n * ref - reactive state\n * data-class is an attribute of an HTML element for dynamic class management\n */\nimport mitt from \"mitt\";\n\ntype Wrapper = any;\n\ninterface ComponentInstance {\n  [key: string]: any;\n}\n\ninterface State {\n  value: any;\n}\n\ndeclare global {\n  interface Window {\n    [key: string]: any;\n  }\n}\n\nconst emitter = mitt();\n\nlet stateNamesHashes = new Map();\n\nexport function createScope(\n  scopeId: string,\n  scope: () => ComponentInstance,\n  alias: string = \"\"\n) {\n  const $wrapper = document.getElementById(scopeId);\n\n  if ($wrapper) {\n    const scopeInstance = scope();\n\n    // @note handle data-click\n    handlerClickReactive($wrapper, scopeInstance);\n\n    // @note handle data-class\n    handlerClassesReactive($wrapper, scopeInstance);\n\n    // @note handle input[data-value]\n    handlerInputDataValueReactive($wrapper, scopeInstance);\n\n    // @note handle data-change\n    handlerChangeReactive($wrapper, scopeInstance);\n\n    if (alias !== \"\") {\n      window[alias] = scopeInstance;\n    } else {\n      window[scopeId] = scopeInstance;\n    }\n  } else {\n    throw Error(\"Нет wrapper: #\" + scopeId);\n  }\n}\n\nexport function createComponent(wrapperClass: string, component: () => {}) {\n  const wrappers = document.getElementsByClassName(\n    wrapperClass\n  ) as HTMLCollection;\n  for (let $wrapper of wrappers) {\n    if ($wrapper) {\n      const componentInstance: ComponentInstance = component();\n      if (isObject(componentInstance)) {\n        // @note handle data-ref\n        handlerRefsInDom($wrapper as Wrapper, componentInstance);\n\n        // @note handle data-click\n        handlerClickReactive($wrapper as Wrapper, componentInstance);\n\n        // @note handle data-class\n        handlerClassesReactive($wrapper as Wrapper, componentInstance);\n\n        // @note handle input[data-value]\n        // ! @todo not tested!!!\n        handlerInputDataValueReactive($wrapper as Wrapper, componentInstance);\n\n        // @note handle data-change\n        handlerChangeReactive($wrapper as Wrapper, componentInstance);\n      }\n    } else {\n      throw Error(\"Нет wrapper: .\" + wrapperClass);\n    }\n  }\n}\n\nexport function ref(defaultValue: any): State {\n  const stateNameHash = `state_${crypto.randomUUID()}`;\n  let state: State = { value: defaultValue };\n\n  const proxyState = new Proxy<State>(state, {\n    set(stateTarget, prop, valueNew) {\n      if (prop === \"value\") {\n        if (stateTarget[\"value\"] !== valueNew) {\n          stateTarget[\"value\"] = valueNew;\n          emitter.emit(stateNameHash, stateTarget);\n        }\n        return true;\n      }\n      return false;\n    },\n  });\n\n  stateNamesHashes.set(proxyState, stateNameHash);\n\n  emitter.emit(stateNameHash, proxyState);\n\n  return proxyState;\n}\n\nfunction handlerRefsInDom($wrapper: Wrapper, instance: ComponentInstance) {\n  const refsInDomAll = findAll(\"[data-ref]\", $wrapper);\n\n  refsInDomAll.forEach(($refEl) => {\n    const refName = $refEl.getAttribute(\"data-ref\");\n    if (refName) {\n      instance[refName].value = $refEl;\n    } else {\n      console.warn(\"The data-ref name was not found in: \", $refEl);\n    }\n  });\n}\n\nfunction handlerInputDataValueReactive(\n  $wrapper: Wrapper,\n  instance: ComponentInstance\n) {\n  const dataValues = findAll(\"[data-value]\", $wrapper);\n\n  dataValues.forEach(($dataValue) => {\n    if ($dataValue instanceof HTMLInputElement) {\n      const dataValue: string | null = $dataValue.dataset.value || null;\n\n      if (dataValue) {\n        const jsExpressionWithPrefix: string = dataValue;\n        let jsExpression = deleteWordPrefix(jsExpressionWithPrefix);\n        const state = instance[jsExpression];\n\n        $dataValue.value = state.value;\n        const stateNameHash = stateNamesHashes.get(state);\n        emitter.on(stateNameHash, (newState: any) => {\n          $dataValue.value = newState.value;\n        });\n      }\n    }\n  });\n}\n\nfunction handlerClickReactive($wrapper: Wrapper, instance: ComponentInstance) {\n  const elClicks = findAll(\"[data-click]\", $wrapper);\n\n  if (elClicks.length) {\n    elClicks.forEach(($elOnClick) => {\n      let methodNameOnClick = $elOnClick.dataset.click;\n\n      if (methodNameOnClick) {\n        // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n        const methodNameOnClickWithoutPrefix =\n          deleteWordPrefix(methodNameOnClick);\n\n        const methodOnClick = instance[methodNameOnClickWithoutPrefix];\n        $elOnClick.addEventListener(\"click\", function (e) {\n          methodOnClick();\n        });\n      } else {\n        console.warn(\n          \"The name of the data-click method was not found in: \",\n          $elOnClick\n        );\n      }\n    });\n  }\n}\n\nfunction handlerChangeReactive($wrapper: Wrapper, instance: ComponentInstance) {\n  const elChanges = findAll(\"[data-change]\", $wrapper);\n\n  if (elChanges.length) {\n    elChanges.forEach(($elOnchange) => {\n      let methodNameOnChange = $elOnchange.dataset.change;\n      if (methodNameOnChange) {\n        // ! Это для убирания префикса например header. - оно пока не мешает в случае если его нет вообще\n        const methodNameOnChangeWithoutPrefix =\n          deleteWordPrefix(methodNameOnChange);\n\n        const methodOnChange = instance[methodNameOnChangeWithoutPrefix];\n\n        $elOnchange.addEventListener(\"change\", function (e) {\n          methodOnChange();\n        });\n      } else {\n        console.warn(\n          \"The name of the data-click method was not found in: \",\n          $elOnchange\n        );\n      }\n    });\n  }\n}\n\nfunction handlerClassesReactive(\n  $wrapper: Wrapper,\n  instance: ComponentInstance\n) {\n  const elClasses = findAll(\"[data-class]\", $wrapper);\n\n  elClasses.forEach(($el) => {\n    handlerClassesReactiveSubFunc1($el);\n  });\n\n  function handlerClassesReactiveSubFunc1($el: HTMLElement) {\n    let jsonString = $el.dataset.class;\n    if (jsonString) {\n      $el.removeAttribute(\"data-class\");\n\n      let parsedJson;\n      try {\n        parsedJson = JSON.parse(jsonString);\n      } catch (error) {\n        console.error(\"Error at JSON string: \" + jsonString);\n        console.error(error);\n      }\n\n      if (Array.isArray(parsedJson)) {\n        for (let i in parsedJson) {\n          let jsExpressionTernary = parsedJson[i];\n\n          const regex = /(.+?)\\s*\\?\\s*(.+?)\\s*:\\s*(.+)/;\n          const match = jsExpressionTernary.match(regex);\n\n          let jsNameWithPrefix = match[1];\n          const classNameTrue = match[2];\n          const classNameFalse = match[3];\n          const className = [classNameTrue, classNameFalse];\n\n          handlerClassesReactiveSubFunc2($el, className, jsNameWithPrefix);\n        }\n      } else if (isObject(parsedJson)) {\n        for (let className in parsedJson) {\n          let jsNameWithPrefix = parsedJson[className];\n\n          handlerClassesReactiveSubFunc2($el, className, jsNameWithPrefix);\n        }\n      }\n    } else {\n      console.warn(\"The data-class JSON string was not found in: \", $el);\n    }\n  }\n\n  function handlerClassesReactiveSubFunc2(\n    $el: HTMLElement,\n    className: string | string[],\n    jsNameWithPrefix: string\n  ) {\n    let isRevertVal = false;\n    if (jsNameWithPrefix[0] === \"!\") {\n      isRevertVal = true;\n      jsNameWithPrefix = jsNameWithPrefix.slice(1);\n    }\n\n    let jsExpression = deleteWordPrefix(jsNameWithPrefix);\n\n    const isNotEqualExpression = jsExpression.includes(\"!=\");\n    const isEqualExpression = jsExpression.includes(\"==\");\n    if (isNotEqualExpression || isEqualExpression) {\n      if (isNotEqualExpression) {\n        const regex = /!=/;\n        const operator = \"!=\";\n        splitExpressionAndCompareAndUpdateClassesReactive(\n          jsExpression,\n          regex,\n          operator,\n          isRevertVal,\n          className,\n          $el\n        );\n      } else if (isEqualExpression) {\n        const regex = /==/;\n        const operator = \"==\";\n        splitExpressionAndCompareAndUpdateClassesReactive(\n          jsExpression,\n          regex,\n          operator,\n          isRevertVal,\n          className,\n          $el\n        );\n      }\n    } else {\n      const operator = \"==\";\n      const jsName = jsExpression;\n      const jsVal = true;\n      compareAndUpdateClassesReactive(\n        jsName,\n        jsVal,\n        operator,\n        isRevertVal,\n        className,\n        $el\n      );\n    }\n  }\n\n  function splitExpressionAndCompareAndUpdateClassesReactive(\n    jsExpression: any,\n    regex: any,\n    operator: any,\n    isRevertVal: any,\n    className: any,\n    $el: any\n  ) {\n    const res = splitExpression(jsExpression, regex);\n    if (res && res.length === 2) {\n      const [jsName, jsVal] = res;\n      compareAndUpdateClassesReactive(\n        jsName,\n        jsVal,\n        operator,\n        isRevertVal,\n        className,\n        $el\n      );\n    }\n  }\n\n  function compareAndUpdateClassesReactive(\n    jsName: any,\n    jsVal: any,\n    operator: any,\n    isRevertVal: any,\n    className: any,\n    $el: any\n  ) {\n    const state = instance[jsName];\n    if (!state) {\n      showWarnIfRefNotFound($wrapper, jsName);\n    } else {\n      const isTrue = compare(state.value, jsVal, operator);\n\n      toggleClass(isTrue, className, $el, isRevertVal);\n      const stateNameHash = stateNamesHashes.get(state);\n\n      emitter.on(stateNameHash, (newState: any) => {\n        const isTrue = compare(newState.value, jsVal, operator);\n        toggleClass(isTrue, className, $el, isRevertVal);\n      });\n    }\n  }\n\n  function toggleClass(\n    value: any,\n    className: string | string[],\n    where: HTMLElement,\n    isRevertVal = false\n  ) {\n    try {\n      const isTrue = (value && !isRevertVal) || (!value && isRevertVal);\n      if (typeof className === \"string\") {\n        if (isTrue) {\n          where.classList.add(className);\n        } else {\n          where.classList.remove(className);\n        }\n      } else if (Array.isArray(className)) {\n        const [classIfTrue, classIfFalse] = className;\n        if (isTrue) {\n          where.classList.remove(classIfFalse);\n          where.classList.add(classIfTrue);\n        } else {\n          where.classList.remove(classIfTrue);\n          where.classList.add(classIfFalse);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nfunction showWarnIfRefNotFound($wrapper: Wrapper, jsName: string) {\n  const instanceId =\n    \"#\" + $wrapper.getAttribute(\"id\") || \".\" + $wrapper.getAttribute(\"class\");\n  console.warn(\n    `Ref ${jsName} is not exists at ${instanceId}. Perhaps the component is located in another component.`\n  );\n}\n\n// ! tools:\nfunction isObject(value: any) {\n  return value !== null && typeof value === \"object\";\n}\n\nfunction deleteWordPrefix(strWithprefixWithDot: string) {\n  return strWithprefixWithDot.replace(/^\\w+\\./, \"\");\n}\n\nfunction splitExpression(\n  expression: string,\n  regex: RegExp\n): [string, string] | null {\n  const parts = expression.split(regex);\n\n  if (parts.length === 2) {\n    return [parts[0].trim(), parts[1].trim()];\n  }\n\n  return null;\n}\n\nfunction compare(value1: any, value2: any, operator: string) {\n  switch (operator) {\n    case \"!=\":\n      return value1 != value2;\n    case \"==\":\n      return value1 == value2;\n    case \"<\":\n      return value1 < value2;\n    case \">\":\n      return value1 > value2;\n    case \"<=\":\n      return value1 <= value2;\n    case \">=\":\n      return value1 >= value2;\n    default:\n      throw new Error(\"Invalid operator\");\n  }\n}\n\nfunction findAll(selector: string, $wrapper: HTMLElement) {\n  const els = $wrapper.querySelectorAll(selector) as NodeListOf<\n    HTMLElement | HTMLInputElement\n  >;\n\n  const elsAll = [...Array.from(els)];\n\n  if ($wrapper.dataset && $wrapper.dataset.ref) {\n    elsAll.push($wrapper);\n  }\n\n  return elsAll;\n}\n"],"names":["mitt","n","t","e","i","emitter","stateNamesHashes","createScope","scopeId","scope","alias","$wrapper","scopeInstance","handlerClickReactive","handlerClassesReactive","handlerInputDataValueReactive","handlerChangeReactive","createComponent","wrapperClass","component","wrappers","componentInstance","isObject","handlerRefsInDom","ref","defaultValue","stateNameHash","state","proxyState","stateTarget","prop","valueNew","instance","findAll","$refEl","refName","$dataValue","dataValue","jsExpression","deleteWordPrefix","newState","elClicks","$elOnClick","methodNameOnClick","methodNameOnClickWithoutPrefix","methodOnClick","elChanges","$elOnchange","methodNameOnChange","methodNameOnChangeWithoutPrefix","methodOnChange","$el","handlerClassesReactiveSubFunc1","jsonString","parsedJson","error","jsExpressionTernary","regex","match","jsNameWithPrefix","classNameTrue","classNameFalse","handlerClassesReactiveSubFunc2","className","isRevertVal","isNotEqualExpression","isEqualExpression","splitExpressionAndCompareAndUpdateClassesReactive","compareAndUpdateClassesReactive","operator","res","splitExpression","jsName","jsVal","showWarnIfRefNotFound","isTrue","compare","toggleClass","value","where","classIfTrue","classIfFalse","instanceId","strWithprefixWithDot","expression","parts","value1","value2","selector","els","elsAll"],"mappings":"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","x_google_ignoreList":[0]}